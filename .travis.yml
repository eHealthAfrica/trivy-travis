dist: focal
language: docker

services:
  - docker

before_install:
  # Set up the Docker images you want to use
  - docker pull node:16
  - docker pull openjdk:17

  # Install SonarScanner manually in the Docker container
  - docker run --rm -v $PWD:/workspace -w /workspace node:16 bash -c "curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip && unzip sonar-scanner-cli.zip"
  - docker run --rm -v $PWD:/workspace -w /workspace node:16 bash -c "export PATH=$PATH:$PWD/sonar-scanner-4.7.0.2747-linux/bin"

script:
  # Run your build commands inside the Node.js Docker container
  - docker run --rm -v $PWD:/workspace -w /workspace node:16 bash -c "npm install && npm test"
  
  # Run the SonarScanner inside the container with full debug (-X)
  - docker run --rm -v $PWD:/workspace -w /workspace node:16 bash -c "sonar-scanner -Dsonar.projectKey=travis-sonarqube \
      -Dsonar.sources=. \
      -Dsonar.host.url=https://sonar.eha.ng/ \
      -Dsonar.login=$TRAVIS_SONARQUBE \
      -X"  # Full debug mode for SonarScanner

  # Run your Java version check in the OpenJDK container
  - docker run --rm -v $PWD:/workspace -w /workspace openjdk:17 bash -c "java -version"
